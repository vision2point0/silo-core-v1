{
  "address": "0x7C2ca9D502f2409BeceAfa68E97a176Ff805029F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_quoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_siloRepository",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AssetNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPriceProvider",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPriceProviderQuoteToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidRepository",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ManagerDidNotChange",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ManagerIsZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyOwnerOrManager",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OnlyRepository",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceProviderAlreadyExists",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceProviderDoesNotExist",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PriceProviderNotRegistered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "QuoteTokenNotSupported",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TokenIsNotAContract",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ManagerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IPriceProvider",
          "name": "newPriceProvider",
          "type": "address"
        }
      ],
      "name": "NewPriceProvider",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipPending",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract IPriceProvider",
          "name": "priceProvider",
          "type": "address"
        }
      ],
      "name": "PriceProviderForAsset",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IPriceProvider",
          "name": "priceProvider",
          "type": "address"
        }
      ],
      "name": "PriceProviderRemoved",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "QUOTE_TOKEN_DECIMALS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "_provider",
          "type": "address"
        }
      ],
      "name": "addPriceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_manager",
          "type": "address"
        }
      ],
      "name": "changeManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "_provider",
          "type": "address"
        }
      ],
      "name": "isPriceProvider",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "manager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pendingOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "priceProviders",
      "outputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceProvidersRepositoryPing",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providerList",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "providersCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        }
      ],
      "name": "providersReadyForAsset",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quoteToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "removePendingOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPriceProvider",
          "name": "_provider",
          "type": "address"
        }
      ],
      "name": "removePriceProvider",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "contract IPriceProvider",
          "name": "_provider",
          "type": "address"
        }
      ],
      "name": "setPriceProviderForAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "siloRepository",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingOwner",
          "type": "address"
        }
      ],
      "name": "transferPendingOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf66c9f24e03772c40fc003ef8eb6db41d5321002e49ad5996bb33b8913063899",
  "receipt": {
    "to": null,
    "from": "0x3E61FA24520C2754593b4544aCb936BC786206EC",
    "contractAddress": "0x7C2ca9D502f2409BeceAfa68E97a176Ff805029F",
    "transactionIndex": 93,
    "gasUsed": "1149023",
    "logsBloom": "0x
    "blockHash": "0x2c6d0a87bbf93ba3f9acbb4d227978cde8b266057ebc01cd9c2bacfc0d7e79e1",
    "transactionHash": "0xf66c9f24e03772c40fc003ef8eb6db41d5321002e49ad5996bb33b8913063899",
    "logs": [
      {
        "transactionIndex": 93,
        "blockNumber": 15307310,
        "transactionHash": "0xf66c9f24e03772c40fc003ef8eb6db41d5321002e49ad5996bb33b8913063899",
        "address": "0x7C2ca9D502f2409BeceAfa68E97a176Ff805029F",
        "topics": [
          "0x04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc686163",
          "0x0000000000000000000000003e61fa24520c2754593b4544acb936bc786206ec"
        ],
        "data": "0x",
        "logIndex": 160,
        "blockHash": "0x2c6d0a87bbf93ba3f9acbb4d227978cde8b266057ebc01cd9c2bacfc0d7e79e1"
      }
    ],
    "blockNumber": 15307310,
    "cumulativeGasUsed": "8300922",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
    "0xd998C35B7900b344bbBe6555cc11576942Cf309d"
  ],
  "numDeployments": 1,
  "solcInputHash": "0c7f4a371f5bf54a4ce669d89d2219f9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_quoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_siloRepository\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AssetNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPriceProvider\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPriceProviderQuoteToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRepository\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerDidNotChange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ManagerIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyOwnerOrManager\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRepository\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceProviderAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceProviderDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PriceProviderNotRegistered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"QuoteTokenNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenIsNotAContract\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ManagerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IPriceProvider\",\"name\":\"newPriceProvider\",\"type\":\"address\"}],\"name\":\"NewPriceProvider\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"OwnershipPending\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IPriceProvider\",\"name\":\"priceProvider\",\"type\":\"address\"}],\"name\":\"PriceProviderForAsset\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IPriceProvider\",\"name\":\"priceProvider\",\"type\":\"address\"}],\"name\":\"PriceProviderRemoved\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"QUOTE_TOKEN_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceProvider\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"addPriceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\"}],\"name\":\"changeManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceProvider\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"isPriceProvider\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"manager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"priceProviders\",\"outputs\":[{\"internalType\":\"contract IPriceProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceProvidersRepositoryPing\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providersCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"providersReadyForAsset\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quoteToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"removePendingOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPriceProvider\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"removePriceProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"contract IPriceProvider\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"setPriceProviderForAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"siloRepository\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingOwner\",\"type\":\"address\"}],\"name\":\"transferPendingOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"security@silo.finance\",\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"Transfers ownership of the contract to a pending owner Can only be called by the pending owner.\"},\"addPriceProvider(address)\":{\"params\":{\"_priceProvider\":\"address of price provider\"}},\"changeManager(address)\":{\"details\":\"Callable by manager or external owner role\",\"params\":{\"_manager\":\"new manager address\"}},\"constructor\":{\"params\":{\"_quoteToken\":\"address of quote token\",\"_siloRepository\":\"address of SiloRepository\"}},\"getPrice(address)\":{\"params\":{\"_asset\":\"address of an asset for which to read price\"},\"returns\":{\"_0\":\"TWAP price of a token with 18 decimals\"}},\"isPriceProvider(address)\":{\"params\":{\"_provider\":\"address of price provider to be removed\"},\"returns\":{\"_0\":\"true if address is a registered price provider, otherwise false\"}},\"manager()\":{\"returns\":{\"_0\":\"manager role address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"priceProvidersRepositoryPing()\":{\"returns\":{\"_0\":\"returns always TRUE\"}},\"providerList()\":{\"returns\":{\"_0\":\"array of price providers\"}},\"providersCount()\":{\"returns\":{\"_0\":\"number of price providers registered\"}},\"providersReadyForAsset(address)\":{\"params\":{\"_asset\":\"asset address to check\"},\"returns\":{\"_0\":\"returns TRUE if price feed is ready, otherwise false\"}},\"removePendingOwnership()\":{\"details\":\"Clears the pending ownership. Can only be called by the current owner.\"},\"removePriceProvider(address)\":{\"params\":{\"_priceProvider\":\"address of price provider to be removed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPriceProviderForAsset(address,address)\":{\"details\":\"Request for asset price is forwarded to the price provider assigned to that asset\",\"params\":{\"_asset\":\"address of an asset for which price provider will be used\",\"_priceProvider\":\"address of price provider\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferPendingOwnership(address)\":{\"details\":\"Transfers pending ownership of the contract to a new account (`newPendingOwner`) and clears any existing pending ownership. Can only be called by the current owner.\"}},\"stateVariables\":{\"QUOTE_TOKEN_DECIMALS\":{\"details\":\"we require quote token to have 18 decimals\"},\"_ONE\":{\"details\":\"Constant used for prices' decimal points, 1e18 is treated as 1\"},\"priceProviders\":{\"details\":\"Each asset must have a price provider contract assigned, otherwise it's not supported\"}},\"title\":\"PriceProvidersRepository\",\"version\":1},\"userdoc\":{\"events\":{\"ManagerChanged(address)\":{\"notice\":\"Emitted when manager is changed\"},\"NewPriceProvider(address)\":{\"notice\":\"Emitted when price provider is added\"},\"OwnershipPending(address)\":{\"notice\":\"Emitted when ownership transfer is proposed, aka pending owner is set\"},\"OwnershipTransferred(address)\":{\"notice\":\"Emitted when ownership is transferred on `transferOwnership` and `acceptOwnership`\"},\"PriceProviderForAsset(address,address)\":{\"notice\":\"Emitted when asset is assigned to price provider\"},\"PriceProviderRemoved(address)\":{\"notice\":\"Emitted when price provider is removed\"}},\"kind\":\"user\",\"methods\":{\"addPriceProvider(address)\":{\"notice\":\"Register new price provider\"},\"changeManager(address)\":{\"notice\":\"Change manager address\"},\"getPrice(address)\":{\"notice\":\"Returns \\\"Time-Weighted Average Price\\\" for an asset\"},\"isPriceProvider(address)\":{\"notice\":\"Returns true if address is a registered price provider\"},\"manager()\":{\"notice\":\"Gets manager role address\"},\"priceProviders(address)\":{\"notice\":\"Maps asset address to its price provider\"},\"priceProvidersRepositoryPing()\":{\"notice\":\"Sanity check function\"},\"providerList()\":{\"notice\":\"Gets an array of price providers\"},\"providersCount()\":{\"notice\":\"Gets number of price providers registered\"},\"providersReadyForAsset(address)\":{\"notice\":\"Checks if providers are available for an asset\"},\"quoteToken()\":{\"notice\":\"Token in which prices are quoted. It's most likely WETH, however it could vary from deployment to deployment. For example 1 SILO costs X amount of quoteToken.\"},\"removePriceProvider(address)\":{\"notice\":\"Unregister price provider\"},\"setPriceProviderForAsset(address,address)\":{\"notice\":\"Sets price provider for asset\"},\"siloRepository()\":{\"notice\":\"SiloRepository contract address\"}},\"notice\":\"A repository of price providers. It manages price providers as well as maps assets to their price provider. It acts as a entry point for Silo for token prices.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceProvidersRepository.sol\":\"PriceProvidersRepository\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/structs/EnumerableSet.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for managing\\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\\n * types.\\n *\\n * Sets have the following properties:\\n *\\n * - Elements are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableSet for EnumerableSet.AddressSet;\\n *\\n *     // Declare a set state variable\\n *     EnumerableSet.AddressSet private mySet;\\n * }\\n * ```\\n *\\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\\n * and `uint256` (`UintSet`) are supported.\\n */\\nlibrary EnumerableSet {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Set type with\\n    // bytes32 values.\\n    // The Set implementation uses private functions, and user-facing\\n    // implementations (such as AddressSet) are just wrappers around the\\n    // underlying Set.\\n    // This means that we can only create new EnumerableSets for types that fit\\n    // in bytes32.\\n\\n    struct Set {\\n        // Storage of set values\\n        bytes32[] _values;\\n        // Position of the value in the `values` array, plus 1 because index 0\\n        // means a value is not in the set.\\n        mapping(bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function _add(Set storage set, bytes32 value) private returns (bool) {\\n        if (!_contains(set, value)) {\\n            set._values.push(value);\\n            // The value is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            set._indexes[value] = set._values.length;\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\\n        // We read and store the value's index to prevent multiple reads from the same storage slot\\n        uint256 valueIndex = set._indexes[value];\\n\\n        if (valueIndex != 0) {\\n            // Equivalent to contains(set, value)\\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = valueIndex - 1;\\n            uint256 lastIndex = set._values.length - 1;\\n\\n            if (lastIndex != toDeleteIndex) {\\n                bytes32 lastvalue = set._values[lastIndex];\\n\\n                // Move the last value to the index where the value to delete is\\n                set._values[toDeleteIndex] = lastvalue;\\n                // Update the index for the moved value\\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\\n            }\\n\\n            // Delete the slot where the moved value was stored\\n            set._values.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete set._indexes[value];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\\n        return set._indexes[value] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function _length(Set storage set) private view returns (uint256) {\\n        return set._values.length;\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\\n        return set._values[index];\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function _values(Set storage set) private view returns (bytes32[] memory) {\\n        return set._values;\\n    }\\n\\n    // Bytes32Set\\n\\n    struct Bytes32Set {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _add(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\\n        return _remove(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\\n        return _contains(set._inner, value);\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(Bytes32Set storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\\n        return _at(set._inner, index);\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\\n        return _values(set._inner);\\n    }\\n\\n    // AddressSet\\n\\n    struct AddressSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(AddressSet storage set, address value) internal returns (bool) {\\n        return _add(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(AddressSet storage set, address value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values in the set. O(1).\\n     */\\n    function length(AddressSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\\n        return address(uint160(uint256(_at(set._inner, index))));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(AddressSet storage set) internal view returns (address[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        address[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n\\n    // UintSet\\n\\n    struct UintSet {\\n        Set _inner;\\n    }\\n\\n    /**\\n     * @dev Add a value to a set. O(1).\\n     *\\n     * Returns true if the value was added to the set, that is if it was not\\n     * already present.\\n     */\\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _add(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the value was removed from the set, that is if it was\\n     * present.\\n     */\\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\\n        return _remove(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns true if the value is in the set. O(1).\\n     */\\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\\n        return _contains(set._inner, bytes32(value));\\n    }\\n\\n    /**\\n     * @dev Returns the number of values on the set. O(1).\\n     */\\n    function length(UintSet storage set) internal view returns (uint256) {\\n        return _length(set._inner);\\n    }\\n\\n    /**\\n     * @dev Returns the value stored at position `index` in the set. O(1).\\n     *\\n     * Note that there are no guarantees on the ordering of values inside the\\n     * array, and it may change when more values are added or removed.\\n     *\\n     * Requirements:\\n     *\\n     * - `index` must be strictly less than {length}.\\n     */\\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\\n        return uint256(_at(set._inner, index));\\n    }\\n\\n    /**\\n     * @dev Return the entire set in an array\\n     *\\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\\n     */\\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\\n        bytes32[] memory store = _values(set._inner);\\n        uint256[] memory result;\\n\\n        assembly {\\n            result := store\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0x9772845c886f87a3aab315f8d6b68aa599027c20f441b131cd4afaf65b588900\",\"license\":\"MIT\"},\"contracts/PriceProvidersRepository.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\nimport \\\"./interfaces/IPriceProvidersRepository.sol\\\";\\nimport \\\"./interfaces/ISiloRepository.sol\\\";\\nimport \\\"./utils/Manageable.sol\\\";\\nimport \\\"./utils/TwoStepOwnable.sol\\\";\\n\\nimport \\\"./lib/TokenHelper.sol\\\";\\nimport \\\"./lib/Ping.sol\\\";\\n\\n/// @title PriceProvidersRepository\\n/// @notice A repository of price providers. It manages price providers as well as maps assets to their price\\n/// provider. It acts as a entry point for Silo for token prices.\\n/// @custom:security-contact security@silo.finance\\ncontract PriceProvidersRepository is IPriceProvidersRepository, Manageable, TwoStepOwnable {\\n    using EnumerableSet for EnumerableSet.AddressSet;\\n\\n    /// @dev we require quote token to have 18 decimals\\n    uint256 public constant QUOTE_TOKEN_DECIMALS = 18;\\n\\n    /// @dev Constant used for prices' decimal points, 1e18 is treated as 1\\n    uint256 private constant _ONE = 1e18;\\n\\n    /// @notice SiloRepository contract address\\n    address public immutable siloRepository;\\n    /// @notice Token in which prices are quoted. It's most likely WETH, however it could vary from deployment\\n    /// to deployment. For example 1 SILO costs X amount of quoteToken.\\n    address public immutable override quoteToken;\\n\\n    /// @notice Maps asset address to its price provider\\n    /// @dev Each asset must have a price provider contract assigned, otherwise it's not supported\\n    mapping(address => IPriceProvider) public override priceProviders;\\n\\n    /// @notice Array of all price providers\\n    EnumerableSet.AddressSet private _allProviders;\\n\\n    error AssetNotSupported();\\n    error InvalidPriceProvider();\\n    error InvalidPriceProviderQuoteToken();\\n    error InvalidRepository();\\n    error OnlyRepository();\\n    error PriceProviderAlreadyExists();\\n    error PriceProviderDoesNotExist();\\n    error PriceProviderNotRegistered();\\n    error QuoteTokenNotSupported();\\n\\n    modifier onlyRepository() {\\n        if (msg.sender != siloRepository) revert OnlyRepository();\\n        _;\\n    }\\n\\n    /// @param _quoteToken address of quote token\\n    /// @param _siloRepository address of SiloRepository\\n    constructor(address _quoteToken, address _siloRepository) Manageable(msg.sender) {\\n        if (TokenHelper.assertAndGetDecimals(_quoteToken) != QUOTE_TOKEN_DECIMALS) {\\n          revert QuoteTokenNotSupported();\\n        }\\n\\n        if (!Ping.pong(ISiloRepository(_siloRepository).siloRepositoryPing)) {\\n            revert InvalidRepository();\\n        }\\n\\n        siloRepository = _siloRepository;\\n        quoteToken = _quoteToken;\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function addPriceProvider(IPriceProvider _provider) external override onlyOwner {\\n        if (!Ping.pong(_provider.priceProviderPing)) revert InvalidPriceProvider();\\n\\n        if (_provider.quoteToken() != quoteToken) revert InvalidPriceProviderQuoteToken();\\n\\n        if (!_allProviders.add(address(_provider))) revert PriceProviderAlreadyExists();\\n\\n        emit NewPriceProvider(_provider);\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function removePriceProvider(IPriceProvider _provider) external virtual override onlyOwner {\\n        if (!_allProviders.remove(address(_provider))) revert PriceProviderDoesNotExist();\\n\\n        emit PriceProviderRemoved(_provider);\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function setPriceProviderForAsset(address _asset, IPriceProvider _provider) external virtual override onlyManager {\\n        if (!_allProviders.contains(address(_provider))) {\\n            revert PriceProviderNotRegistered();\\n        }\\n\\n        if (!_provider.assetSupported(_asset)) revert AssetNotSupported();\\n\\n        emit PriceProviderForAsset(_asset, _provider);\\n        priceProviders[_asset] = _provider;\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function isPriceProvider(IPriceProvider _provider) external view override returns (bool) {\\n        return _allProviders.contains(address(_provider));\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function providersCount() external view override returns (uint256) {\\n        return _allProviders.length();\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function providerList() external view override returns (address[] memory) {\\n        return _allProviders.values();\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function providersReadyForAsset(address _asset) external view override returns (bool) {\\n        // quote token is supported by default because getPrice() returns _ONE as its price by default\\n        if (_asset == quoteToken) return true;\\n\\n        IPriceProvider priceProvider = priceProviders[_asset];\\n        if (address(priceProvider) == address(0)) return false;\\n\\n        return priceProvider.assetSupported(_asset);\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function priceProvidersRepositoryPing() external pure override returns (bytes4) {\\n        return this.priceProvidersRepositoryPing.selector;\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function manager() public view override(Manageable, IPriceProvidersRepository) returns (address) {\\n        return Manageable.manager();\\n    }\\n\\n    /// @inheritdoc TwoStepOwnable\\n    function owner() public view override(Manageable, TwoStepOwnable) returns (address) {\\n        return TwoStepOwnable.owner();\\n    }\\n\\n    /// @inheritdoc IPriceProvidersRepository\\n    function getPrice(address _asset) public view override virtual returns (uint256) {\\n        if (_asset == quoteToken) return _ONE;\\n\\n        if (address(priceProviders[_asset]) == address(0)) revert AssetNotSupported();\\n\\n        return priceProviders[_asset].getPrice(_asset);\\n    }\\n}\\n\",\"keccak256\":\"0x6e7c1b0899c1a5d3a5ccd5461b99d59869e73582e46bd8aa294e10672bcd9bc0\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IInterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\ninterface IInterestRateModel {\\n    /* solhint-disable */\\n    struct Config {\\n        // uopt \\u2208 (0, 1) \\u2013 optimal utilization;\\n        int256 uopt;\\n        // ucrit \\u2208 (uopt, 1) \\u2013 threshold of large utilization;\\n        int256 ucrit;\\n        // ulow \\u2208 (0, uopt) \\u2013 threshold of low utilization\\n        int256 ulow;\\n        // ki > 0 \\u2013 integrator gain\\n        int256 ki;\\n        // kcrit > 0 \\u2013 proportional gain for large utilization\\n        int256 kcrit;\\n        // klow \\u2265 0 \\u2013 proportional gain for low utilization\\n        int256 klow;\\n        // klin \\u2265 0 \\u2013 coefficient of the lower linear bound\\n        int256 klin;\\n        // beta \\u2265 0 - a scaling factor\\n        int256 beta;\\n        // ri \\u2265 0 \\u2013 initial value of the integrator\\n        int256 ri;\\n        // Tcrit \\u2265 0 - the time during which the utilization exceeds the critical value\\n        int256 Tcrit;\\n    }\\n    /* solhint-enable */\\n\\n    /// @dev Set dedicated config for given asset in a Silo. Config is per asset per Silo so different assets\\n    /// in different Silo can have different configs.\\n    /// It will try to call `_silo.accrueInterest(_asset)` before updating config, but it is not guaranteed,\\n    /// that this call will be successful, if it fail config will be set anyway.\\n    /// @param _silo Silo address for which config should be set\\n    /// @param _asset asset address for which config should be set\\n    function setConfig(address _silo, address _asset, Config calldata _config) external;\\n\\n    /// @dev get compound interest rate and update model storage\\n    /// @param _asset address of an asset in Silo for which interest rate should be calculated\\n    /// @param _blockTimestamp current block timestamp\\n    /// @return rcomp compounded interest rate from last update until now (1e18 == 100%)\\n    function getCompoundInterestRateAndUpdate(\\n        address _asset,\\n        uint256 _blockTimestamp\\n    ) external returns (uint256 rcomp);\\n\\n    /// @dev Get config for given asset in a Silo. If dedicated config is not set, default one will be returned.\\n    /// @param _silo Silo address for which config should be set\\n    /// @param _asset asset address for which config should be set\\n    /// @return Config struct for asset in Silo\\n    function getConfig(address _silo, address _asset) external view returns (Config memory);\\n\\n    /// @dev get compound interest rate\\n    /// @param _silo address of Silo\\n    /// @param _asset address of an asset in Silo for which interest rate should be calculated\\n    /// @param _blockTimestamp current block timestamp\\n    /// @return rcomp compounded interest rate from last update until now (1e18 == 100%)\\n    function getCompoundInterestRate(\\n        address _silo,\\n        address _asset,\\n        uint256 _blockTimestamp\\n    ) external view returns (uint256 rcomp);\\n\\n    /// @dev get current annual interest rate\\n    /// @param _silo address of Silo\\n    /// @param _asset address of an asset in Silo for which interest rate should be calculated\\n    /// @param _blockTimestamp current block timestamp\\n    /// @return rcur current annual interest rate (1e18 == 100%)\\n    function getCurrentInterestRate(\\n        address _silo,\\n        address _asset,\\n        uint256 _blockTimestamp\\n    ) external view returns (uint256 rcur);\\n\\n    /// @notice get the flag to detect rcomp restriction (zero current interest) due to overflow\\n    /// overflow boolean flag to detect rcomp restriction\\n    function overflowDetected(\\n        address _silo,\\n        address _asset,\\n        uint256 _blockTimestamp\\n    ) external view returns (bool overflow);\\n\\n    /// @dev pure function that calculates current annual interest rate\\n    /// @param _c configuration object, InterestRateModel.Config\\n    /// @param _totalBorrowAmount current total borrows for asset\\n    /// @param _totalDeposits current total deposits for asset\\n    /// @param _interestRateTimestamp timestamp of last interest rate update\\n    /// @param _blockTimestamp current block timestamp\\n    /// @return rcur current annual interest rate (1e18 == 100%)\\n    function calculateCurrentInterestRate(\\n        Config memory _c,\\n        uint256 _totalDeposits,\\n        uint256 _totalBorrowAmount,\\n        uint256 _interestRateTimestamp,\\n        uint256 _blockTimestamp\\n    ) external pure returns (uint256 rcur);\\n\\n    /// @dev pure function that calculates interest rate based on raw input data\\n    /// @param _c configuration object, InterestRateModel.Config\\n    /// @param _totalBorrowAmount current total borrows for asset\\n    /// @param _totalDeposits current total deposits for asset\\n    /// @param _interestRateTimestamp timestamp of last interest rate update\\n    /// @param _blockTimestamp current block timestamp\\n    /// @return rcomp compounded interest rate from last update until now (1e18 == 100%)\\n    /// @return ri current integral part of the rate\\n    /// @return Tcrit time during which the utilization exceeds the critical value\\n    /// @return overflow boolean flag to detect rcomp restriction\\n    function calculateCompoundInterestRateWithOverflowDetection(\\n        Config memory _c,\\n        uint256 _totalDeposits,\\n        uint256 _totalBorrowAmount,\\n        uint256 _interestRateTimestamp,\\n        uint256 _blockTimestamp\\n    ) external pure returns (\\n        uint256 rcomp,\\n        int256 ri,\\n        int256 Tcrit, // solhint-disable-line var-name-mixedcase\\n        bool overflow\\n    );\\n\\n    /// @dev pure function that calculates interest rate based on raw input data\\n    /// @param _c configuration object, InterestRateModel.Config\\n    /// @param _totalBorrowAmount current total borrows for asset\\n    /// @param _totalDeposits current total deposits for asset\\n    /// @param _interestRateTimestamp timestamp of last interest rate update\\n    /// @param _blockTimestamp current block timestamp\\n    /// @return rcomp compounded interest rate from last update until now (1e18 == 100%)\\n    /// @return ri current integral part of the rate\\n    /// @return Tcrit time during which the utilization exceeds the critical value\\n    function calculateCompoundInterestRate(\\n        Config memory _c,\\n        uint256 _totalDeposits,\\n        uint256 _totalBorrowAmount,\\n        uint256 _interestRateTimestamp,\\n        uint256 _blockTimestamp\\n    ) external pure returns (\\n        uint256 rcomp,\\n        int256 ri,\\n        int256 Tcrit // solhint-disable-line var-name-mixedcase\\n    );\\n\\n    /// @dev returns decimal points used by model\\n    function DP() external pure returns (uint256); // solhint-disable-line func-name-mixedcase\\n\\n    /// @dev just a helper method to see if address is a InterestRateModel\\n    /// @return always true\\n    function interestRateModelPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0x26b53c997adc8ced83dac833e5d642e1dc3aff6a3ed643da64718c30674ee8c8\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/INotificationReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\n/// @title Common interface for Silo Incentive Contract\\ninterface INotificationReceiver {\\n    /// @dev Informs the contract about token transfer\\n    /// @param _token address of the token that was transferred\\n    /// @param _from sender\\n    /// @param _to receiver\\n    /// @param _amount amount that was transferred\\n    function onAfterTransfer(address _token, address _from, address _to, uint256 _amount) external;\\n\\n    /// @dev Sanity check function\\n    /// @return always true\\n    function notificationReceiverPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0xdbfa701819d923d592f42926dbce3bbc6d0e64875d56685bb145ea0e7b449230\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPriceProvider.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n/// @title Common interface for Silo Price Providers\\ninterface IPriceProvider {\\n    /// @notice Returns \\\"Time-Weighted Average Price\\\" for an asset. Calculates TWAP price for quote/asset.\\n    /// It unifies all tokens decimal to 18, examples:\\n    /// - if asses == quote it returns 1e18\\n    /// - if asset is USDC and quote is ETH and ETH costs ~$3300 then it returns ~0.0003e18 WETH per 1 USDC\\n    /// @param _asset address of an asset for which to read price\\n    /// @return price of asses with 18 decimals, throws when pool is not ready yet to provide price\\n    function getPrice(address _asset) external view returns (uint256 price);\\n\\n    /// @dev Informs if PriceProvider is setup for asset. It does not means PriceProvider can provide price right away.\\n    /// Some providers implementations need time to \\\"build\\\" buffer for TWAP price,\\n    /// so price may not be available yet but this method will return true.\\n    /// @param _asset asset in question\\n    /// @return TRUE if asset has been setup, otherwise false\\n    function assetSupported(address _asset) external view returns (bool);\\n\\n    /// @notice Gets token address in which prices are quoted\\n    /// @return quoteToken address\\n    function quoteToken() external view returns (address);\\n\\n    /// @notice Helper method that allows easily detects, if contract is PriceProvider\\n    /// @dev this can save us from simple human errors, in case we use invalid address\\n    /// but this should NOT be treated as security check\\n    /// @return always true\\n    function priceProviderPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0xe25259fe540647dd3945dbc8eff5f7ec789c6708b42e1d82c456d3e8c9082147\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IPriceProvidersRepository.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\nimport \\\"./IPriceProvider.sol\\\";\\n\\ninterface IPriceProvidersRepository {\\n    /// @notice Emitted when price provider is added\\n    /// @param newPriceProvider new price provider address\\n    event NewPriceProvider(IPriceProvider indexed newPriceProvider);\\n\\n    /// @notice Emitted when price provider is removed\\n    /// @param priceProvider removed price provider address\\n    event PriceProviderRemoved(IPriceProvider indexed priceProvider);\\n\\n    /// @notice Emitted when asset is assigned to price provider\\n    /// @param asset assigned asset   address\\n    /// @param priceProvider price provider address\\n    event PriceProviderForAsset(address indexed asset, IPriceProvider indexed priceProvider);\\n\\n    /// @notice Register new price provider\\n    /// @param _priceProvider address of price provider\\n    function addPriceProvider(IPriceProvider _priceProvider) external;\\n\\n    /// @notice Unregister price provider\\n    /// @param _priceProvider address of price provider to be removed\\n    function removePriceProvider(IPriceProvider _priceProvider) external;\\n\\n    /// @notice Sets price provider for asset\\n    /// @dev Request for asset price is forwarded to the price provider assigned to that asset\\n    /// @param _asset address of an asset for which price provider will be used\\n    /// @param _priceProvider address of price provider\\n    function setPriceProviderForAsset(address _asset, IPriceProvider _priceProvider) external;\\n\\n    /// @notice Returns \\\"Time-Weighted Average Price\\\" for an asset\\n    /// @param _asset address of an asset for which to read price\\n    /// @return price TWAP price of a token with 18 decimals\\n    function getPrice(address _asset) external view returns (uint256 price);\\n\\n    /// @notice Gets price provider assigned to an asset\\n    /// @param _asset address of an asset for which to get price provider\\n    /// @return priceProvider address of price provider\\n    function priceProviders(address _asset) external view returns (IPriceProvider priceProvider);\\n\\n    /// @notice Gets token address in which prices are quoted\\n    /// @return quoteToken address\\n    function quoteToken() external view returns (address);\\n\\n    /// @notice Gets manager role address\\n    /// @return manager role address\\n    function manager() external view returns (address);\\n\\n    /// @notice Checks if providers are available for an asset\\n    /// @param _asset asset address to check\\n    /// @return returns TRUE if price feed is ready, otherwise false\\n    function providersReadyForAsset(address _asset) external view returns (bool);\\n\\n    /// @notice Returns true if address is a registered price provider\\n    /// @param _provider address of price provider to be removed\\n    /// @return true if address is a registered price provider, otherwise false\\n    function isPriceProvider(IPriceProvider _provider) external view returns (bool);\\n\\n    /// @notice Gets number of price providers registered\\n    /// @return number of price providers registered\\n    function providersCount() external view returns (uint256);\\n\\n    /// @notice Gets an array of price providers\\n    /// @return array of price providers\\n    function providerList() external view returns (address[] memory);\\n\\n    /// @notice Sanity check function\\n    /// @return returns always TRUE\\n    function priceProvidersRepositoryPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0x715cb0aa617134d1f4ebe427adb5899455114260c3d853732a6302fb5b5d6e53\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/IShareToken.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\nimport \\\"./INotificationReceiver.sol\\\";\\n\\ninterface IShareToken is IERC20Metadata {\\n    /// @notice Emitted every time receiver is notified about token transfer\\n    /// @param notificationReceiver receiver address\\n    /// @param success false if TX reverted on `notificationReceiver` side, otherwise true\\n    event NotificationSent(\\n        INotificationReceiver indexed notificationReceiver,\\n        bool success\\n    );\\n\\n    /// @notice Mint method for Silo to create debt position\\n    /// @param _account wallet for which to mint token\\n    /// @param _amount amount of token to be minted\\n    function mint(address _account, uint256 _amount) external;\\n\\n    /// @notice Burn method for Silo to close debt position\\n    /// @param _account wallet for which to burn token\\n    /// @param _amount amount of token to be burned\\n    function burn(address _account, uint256 _amount) external;\\n}\\n\",\"keccak256\":\"0xb07e3d32d9be5266129c8f6e0f7db137f9d4632c2659fceaddc37ba65d5ce0c4\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ISiloFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\ninterface ISiloFactory {\\n    /// @notice Emitted when Silo is deployed\\n    /// @param silo address of deployed Silo\\n    /// @param asset address of asset for which Silo was deployed\\n    /// @param version version of silo implementation\\n    event NewSiloCreated(address indexed silo, address indexed asset, uint128 version);\\n\\n    /// @notice Must be called by repository on constructor\\n    /// @param _siloRepository the SiloRepository to set\\n    function initRepository(address _siloRepository) external;\\n\\n    /// @notice Deploys Silo\\n    /// @param _siloAsset unique asset for which Silo is deployed\\n    /// @param _version version of silo implementation\\n    /// @param _data (optional) data that may be needed during silo creation\\n    /// @return silo deployed Silo address\\n    function createSilo(address _siloAsset, uint128 _version, bytes memory _data) external returns (address silo);\\n\\n    /// @dev just a helper method to see if address is a factory\\n    function siloFactoryPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0x5df65ec4644cc935f9e807e4c295b67a22d2768487878a8619a0273a488d4b98\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ISiloRepository.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"./ISiloFactory.sol\\\";\\nimport \\\"./ITokensFactory.sol\\\";\\nimport \\\"./IPriceProvidersRepository.sol\\\";\\nimport \\\"./INotificationReceiver.sol\\\";\\nimport \\\"./IInterestRateModel.sol\\\";\\n\\ninterface ISiloRepository {\\n    /// @dev protocol fees in precision points (Solvency._PRECISION_DECIMALS), we do allow for fee == 0\\n    struct Fees {\\n        /// @dev One time protocol fee for opening a borrow position in precision points (Solvency._PRECISION_DECIMALS)\\n        uint64 entryFee;\\n        /// @dev Protocol revenue share in interest paid in precision points (Solvency._PRECISION_DECIMALS)\\n        uint64 protocolShareFee;\\n        /// @dev Protocol share in liquidation profit in precision points (Solvency._PRECISION_DECIMALS).\\n        /// It's calculated from total collateral amount to be transferred to liquidator.\\n        uint64 protocolLiquidationFee;\\n    }\\n\\n    struct SiloVersion {\\n        /// @dev Default version of Silo. If set to 0, it means it is not set. By default it is set to 1\\n        uint128 byDefault;\\n\\n        /// @dev Latest added version of Silo. If set to 0, it means it is not set. By default it is set to 1\\n        uint128 latest;\\n    }\\n\\n    /// @dev AssetConfig struct represents configurable parameters for each Silo\\n    struct AssetConfig {\\n        /// @dev Loan-to-Value ratio represents the maximum borrowing power of a specific collateral.\\n        ///      For example, if the collateral asset has an LTV of 75%, the user can borrow up to 0.75 worth\\n        ///      of quote token in the principal currency for every quote token worth of collateral.\\n        ///      value uses 18 decimals eg. 100% == 1e18\\n        ///      max valid value is 1e18 so it needs storage of 60 bits\\n        uint64 maxLoanToValue;\\n\\n        /// @dev Liquidation Threshold represents the threshold at which a borrow position will be considered\\n        ///      undercollateralized and subject to liquidation for each collateral. For example,\\n        ///      if a collateral has a liquidation threshold of 80%, it means that the loan will be\\n        ///      liquidated when the borrowAmount value is worth 80% of the collateral value.\\n        ///      value uses 18 decimals eg. 100% == 1e18\\n        uint64 liquidationThreshold;\\n\\n        /// @dev interest rate model address\\n        IInterestRateModel interestRateModel;\\n    }\\n\\n    event NewDefaultMaximumLTV(uint64 defaultMaximumLTV);\\n\\n    event NewDefaultLiquidationThreshold(uint64 defaultLiquidationThreshold);\\n\\n    /// @notice Emitted on new Silo creation\\n    /// @param silo deployed Silo address\\n    /// @param asset unique asset for deployed Silo\\n    /// @param siloVersion version of deployed Silo\\n    event NewSilo(address indexed silo, address indexed asset, uint128 siloVersion);\\n\\n    /// @notice Emitted when new Silo (or existing one) becomes a bridge pool (pool with only bridge tokens).\\n    /// @param pool address of the bridge pool, It can be zero address when bridge asset is removed and pool no longer\\n    /// is treated as bridge pool\\n    event BridgePool(address indexed pool);\\n\\n    /// @notice Emitted on new bridge asset\\n    /// @param newBridgeAsset address of added bridge asset\\n    event BridgeAssetAdded(address indexed newBridgeAsset);\\n\\n    /// @notice Emitted on removed bridge asset\\n    /// @param bridgeAssetRemoved address of removed bridge asset\\n    event BridgeAssetRemoved(address indexed bridgeAssetRemoved);\\n\\n    /// @notice Emitted when default interest rate model is changed\\n    /// @param newModel address of new interest rate model\\n    event InterestRateModel(IInterestRateModel indexed newModel);\\n\\n    /// @notice Emitted on price provider repository address update\\n    /// @param newProvider address of new oracle repository\\n    event PriceProvidersRepositoryUpdate(\\n        IPriceProvidersRepository indexed newProvider\\n    );\\n\\n    /// @notice Emitted on token factory address update\\n    /// @param newTokensFactory address of new token factory\\n    event TokensFactoryUpdate(address indexed newTokensFactory);\\n\\n    /// @notice Emitted on router address update\\n    /// @param newRouter address of new router\\n    event RouterUpdate(address indexed newRouter);\\n\\n    /// @notice Emitted on INotificationReceiver address update\\n    /// @param newIncentiveContract address of new INotificationReceiver\\n    event NotificationReceiverUpdate(INotificationReceiver indexed newIncentiveContract);\\n\\n    /// @notice Emitted when new Silo version is registered\\n    /// @param factory factory address that deploys registered Silo version\\n    /// @param siloLatestVersion Silo version of registered Silo\\n    /// @param siloDefaultVersion current default Silo version\\n    event RegisterSiloVersion(address indexed factory, uint128 siloLatestVersion, uint128 siloDefaultVersion);\\n\\n    /// @notice Emitted when Silo version is unregistered\\n    /// @param factory factory address that deploys unregistered Silo version\\n    /// @param siloVersion version that was unregistered\\n    event UnregisterSiloVersion(address indexed factory, uint128 siloVersion);\\n\\n    /// @notice Emitted when default Silo version is updated\\n    /// @param newDefaultVersion new default version\\n    event SiloDefaultVersion(uint128 newDefaultVersion);\\n\\n    /// @notice Emitted when default fee is updated\\n    /// @param newEntryFee new entry fee\\n    /// @param newProtocolShareFee new protocol share fee\\n    /// @param newProtocolLiquidationFee new protocol liquidation fee\\n    event FeeUpdate(\\n        uint64 newEntryFee,\\n        uint64 newProtocolShareFee,\\n        uint64 newProtocolLiquidationFee\\n    );\\n\\n    /// @notice Emitted when asset config is updated for a silo\\n    /// @param silo silo for which asset config is being set\\n    /// @param asset asset for which asset config is being set\\n    /// @param assetConfig new asset config\\n    event AssetConfigUpdate(address indexed silo, address indexed asset, AssetConfig assetConfig);\\n\\n    /// @notice Emitted when silo (silo factory) version is set for asset\\n    /// @param asset asset for which asset config is being set\\n    /// @param version Silo version\\n    event VersionForAsset(address indexed asset, uint128 version);\\n\\n    /// @param _siloAsset silo asset\\n    /// @return version of Silo that is assigned for provided asset, if not assigned it returns zero (default)\\n    function getVersionForAsset(address _siloAsset) external returns (uint128);\\n\\n    /// @notice setter for `getVersionForAsset` mapping\\n    /// @param _siloAsset silo asset\\n    /// @param _version version of Silo that will be assigned for `_siloAsset`, zero (default) is acceptable\\n    function setVersionForAsset(address _siloAsset, uint128 _version) external;\\n\\n    /// @notice use this method only when off-chain verification is OFF\\n    /// @dev Silo does NOT support rebase and deflationary tokens\\n    /// @param _siloAsset silo asset\\n    /// @param _siloData (optional) data that may be needed during silo creation\\n    /// @return createdSilo address of created silo\\n    function newSilo(address _siloAsset, bytes memory _siloData) external returns (address createdSilo);\\n\\n    /// @notice use this method to deploy new version of Silo for an asset that already has Silo deployed.\\n    /// Only owner (DAO) can replace.\\n    /// @dev Silo does NOT support rebase and deflationary tokens\\n    /// @param _siloAsset silo asset\\n    /// @param _siloVersion version of silo implementation. Use 0 for default version which is fine\\n    /// for 99% of cases.\\n    /// @param _siloData (optional) data that may be needed during silo creation\\n    /// @return createdSilo address of created silo\\n    function replaceSilo(\\n        address _siloAsset,\\n        uint128 _siloVersion,\\n        bytes memory _siloData\\n    ) external returns (address createdSilo);\\n\\n    /// @notice Set factory contract for debt and collateral tokens for each Silo asset\\n    /// @dev Callable only by owner\\n    /// @param _tokensFactory address of TokensFactory contract that deploys debt and collateral tokens\\n    function setTokensFactory(address _tokensFactory) external;\\n\\n    /// @notice Set default fees\\n    /// @dev Callable only by owner\\n    /// @param _fees:\\n    /// - _entryFee one time protocol fee for opening a borrow position in precision points\\n    /// (Solvency._PRECISION_DECIMALS)\\n    /// - _protocolShareFee protocol revenue share in interest paid in precision points\\n    /// (Solvency._PRECISION_DECIMALS)\\n    /// - _protocolLiquidationFee protocol share in liquidation profit in precision points\\n    /// (Solvency._PRECISION_DECIMALS). It's calculated from total collateral amount to be transferred\\n    /// to liquidator.\\n    function setFees(Fees calldata _fees) external;\\n\\n    /// @notice Set configuration for given asset in given Silo\\n    /// @dev Callable only by owner\\n    /// @param _silo Silo address for which config applies\\n    /// @param _asset asset address for which config applies\\n    /// @param _assetConfig:\\n    ///    - _maxLoanToValue maximum Loan-to-Value, for details see `Repository.AssetConfig.maxLoanToValue`\\n    ///    - _liquidationThreshold liquidation threshold, for details see `Repository.AssetConfig.maxLoanToValue`\\n    ///    - _interestRateModel interest rate model address, for details see `Repository.AssetConfig.interestRateModel`\\n    function setAssetConfig(\\n        address _silo,\\n        address _asset,\\n        AssetConfig calldata _assetConfig\\n    ) external;\\n\\n    /// @notice Set default interest rate model\\n    /// @dev Callable only by owner\\n    /// @param _defaultInterestRateModel default interest rate model\\n    function setDefaultInterestRateModel(IInterestRateModel _defaultInterestRateModel) external;\\n\\n    /// @notice Set default maximum LTV\\n    /// @dev Callable only by owner\\n    /// @param _defaultMaxLTV default maximum LTV in precision points (Solvency._PRECISION_DECIMALS)\\n    function setDefaultMaximumLTV(uint64 _defaultMaxLTV) external;\\n\\n    /// @notice Set default liquidation threshold\\n    /// @dev Callable only by owner\\n    /// @param _defaultLiquidationThreshold default liquidation threshold in precision points\\n    /// (Solvency._PRECISION_DECIMALS)\\n    function setDefaultLiquidationThreshold(uint64 _defaultLiquidationThreshold) external;\\n\\n    /// @notice Set price provider repository\\n    /// @dev Callable only by owner\\n    /// @param _repository price provider repository address\\n    function setPriceProvidersRepository(IPriceProvidersRepository _repository) external;\\n\\n    /// @notice Set router contract\\n    /// @dev Callable only by owner\\n    /// @param _router router address\\n    function setRouter(address _router) external;\\n\\n    /// @notice Set NotificationReceiver contract\\n    /// @dev Callable only by owner\\n    /// @param _silo silo address for which to set `_notificationReceiver`\\n    /// @param _notificationReceiver NotificationReceiver address\\n    function setNotificationReceiver(address _silo, INotificationReceiver _notificationReceiver) external;\\n\\n    /// @notice Adds new bridge asset\\n    /// @dev New bridge asset must be unique. Duplicates in bridge assets are not allowed. It's possible to add\\n    /// bridge asset that has been removed in the past. Note that all Silos must be synced manually. Callable\\n    /// only by owner.\\n    /// @param _newBridgeAsset bridge asset address\\n    function addBridgeAsset(address _newBridgeAsset) external;\\n\\n    /// @notice Removes bridge asset\\n    /// @dev Note that all Silos must be synced manually. Callable only by owner.\\n    /// @param _bridgeAssetToRemove bridge asset address to be removed\\n    function removeBridgeAsset(address _bridgeAssetToRemove) external;\\n\\n    /// @notice Registers new Silo version\\n    /// @dev User can choose which Silo version he wants to deploy. It's possible to have multiple versions of Silo.\\n    /// Callable only by owner.\\n    /// @param _factory factory contract that deploys new version of Silo\\n    /// @param _isDefault true if this version should be used as default\\n    function registerSiloVersion(ISiloFactory _factory, bool _isDefault) external;\\n\\n    /// @notice Unregisters Silo version\\n    /// @dev Callable only by owner.\\n    /// @param _siloVersion Silo version to be unregistered\\n    function unregisterSiloVersion(uint128 _siloVersion) external;\\n\\n    /// @notice Sets default Silo version\\n    /// @dev Callable only by owner.\\n    /// @param _defaultVersion Silo version to be set as default\\n    function setDefaultSiloVersion(uint128 _defaultVersion) external;\\n\\n    /// @notice Check if contract address is a Silo deployment\\n    /// @param _silo address of expected Silo\\n    /// @return true if address is Silo deployment, otherwise false\\n    function isSilo(address _silo) external view returns (bool);\\n\\n    /// @notice Get Silo address of asset\\n    /// @param _asset address of asset\\n    /// @return address of corresponding Silo deployment\\n    function getSilo(address _asset) external view returns (address);\\n\\n    /// @notice Get Silo Factory for given version\\n    /// @param _siloVersion version of Silo implementation\\n    /// @return ISiloFactory contract that deploys Silos of given version\\n    function siloFactory(uint256 _siloVersion) external view returns (ISiloFactory);\\n\\n    /// @notice Get debt and collateral Token Factory\\n    /// @return ITokensFactory contract that deploys debt and collateral tokens\\n    function tokensFactory() external view returns (ITokensFactory);\\n\\n    /// @notice Get Router contract\\n    /// @return address of router contract\\n    function router() external view returns (address);\\n\\n    /// @notice Get current bridge assets\\n    /// @dev Keep in mind that not all Silos may be synced with current bridge assets so it's possible that some\\n    /// assets in that list are not part of given Silo.\\n    /// @return address array of bridge assets\\n    function getBridgeAssets() external view returns (address[] memory);\\n\\n    /// @notice Get removed bridge assets\\n    /// @dev Keep in mind that not all Silos may be synced with bridge assets so it's possible that some\\n    /// assets in that list are still part of given Silo.\\n    /// @return address array of bridge assets\\n    function getRemovedBridgeAssets() external view returns (address[] memory);\\n\\n    /// @notice Get maximum LTV for asset in given Silo\\n    /// @dev If dedicated config is not set, method returns default config\\n    /// @param _silo address of Silo\\n    /// @param _asset address of an asset\\n    /// @return maximum LTV in precision points (Solvency._PRECISION_DECIMALS)\\n    function getMaximumLTV(address _silo, address _asset) external view returns (uint256);\\n\\n    /// @notice Get Interest Rate Model address for asset in given Silo\\n    /// @dev If dedicated config is not set, method returns default config\\n    /// @param _silo address of Silo\\n    /// @param _asset address of an asset\\n    /// @return address of interest rate model\\n    function getInterestRateModel(address _silo, address _asset) external view returns (IInterestRateModel);\\n\\n    /// @notice Get liquidation threshold for asset in given Silo\\n    /// @dev If dedicated config is not set, method returns default config\\n    /// @param _silo address of Silo\\n    /// @param _asset address of an asset\\n    /// @return liquidation threshold in precision points (Solvency._PRECISION_DECIMALS)\\n    function getLiquidationThreshold(address _silo, address _asset) external view returns (uint256);\\n\\n    /// @notice Get incentive contract address. Incentive contracts are responsible for distributing rewards\\n    /// to debt and/or collateral token holders of given Silo\\n    /// @param _silo address of Silo\\n    /// @return incentive contract address\\n    function getNotificationReceiver(address _silo) external view returns (INotificationReceiver);\\n\\n    /// @notice Get owner role address of Repository\\n    /// @return owner role address\\n    function owner() external view returns (address);\\n\\n    /// @notice get PriceProvidersRepository contract that manages price providers implementations\\n    /// @return IPriceProvidersRepository address\\n    function priceProvidersRepository() external view returns (IPriceProvidersRepository);\\n\\n    /// @dev Get protocol fee for opening a borrow position\\n    /// @return fee in precision points (Solvency._PRECISION_DECIMALS == 100%)\\n    function entryFee() external view returns (uint256);\\n\\n    /// @dev Get protocol share fee\\n    /// @return protocol share fee in precision points (Solvency._PRECISION_DECIMALS == 100%)\\n    function protocolShareFee() external view returns (uint256);\\n\\n    /// @dev Get protocol liquidation fee\\n    /// @return protocol liquidation fee in precision points (Solvency._PRECISION_DECIMALS == 100%)\\n    function protocolLiquidationFee() external view returns (uint256);\\n\\n    /// @dev Checks all conditions for new silo creation and throws when not possible to create\\n    /// @param _asset address of asset for which you want to create silo\\n    /// @param _assetIsABridge bool TRUE when `_asset` is bridge asset, FALSE when it is not\\n    function ensureCanCreateSiloFor(address _asset, bool _assetIsABridge) external view;\\n\\n    function siloRepositoryPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0x3ab90e88cad4aac25c6f44b1071bc31ef7e7c0594a9b916e74d1f1ba26d63e38\",\"license\":\"BUSL-1.1\"},\"contracts/interfaces/ITokensFactory.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"./IShareToken.sol\\\";\\n\\ninterface ITokensFactory {\\n    /// @notice Emitted when collateral token is deployed\\n    /// @param token address of deployed collateral token\\n    event NewShareCollateralTokenCreated(address indexed token);\\n\\n    /// @notice Emitted when collateral token is deployed\\n    /// @param token address of deployed debt token\\n    event NewShareDebtTokenCreated(address indexed token);\\n\\n    ///@notice Must be called by repository on constructor\\n    /// @param _siloRepository the SiloRepository to set\\n    function initRepository(address _siloRepository) external;\\n\\n    /// @notice Deploys collateral token\\n    /// @param _name name of the token\\n    /// @param _symbol symbol of the token\\n    /// @param _asset underlying asset for which token is deployed\\n    /// @return address of deployed collateral share token\\n    function createShareCollateralToken(\\n        string memory _name,\\n        string memory _symbol,\\n        address _asset\\n    ) external returns (IShareToken);\\n\\n    /// @notice Deploys debt token\\n    /// @param _name name of the token\\n    /// @param _symbol symbol of the token\\n    /// @param _asset underlying asset for which token is deployed\\n    /// @return address of deployed debt share token\\n    function createShareDebtToken(\\n        string memory _name,\\n        string memory _symbol,\\n        address _asset\\n    )\\n        external\\n        returns (IShareToken);\\n\\n    /// @dev just a helper method to see if address is a factory\\n    /// @return always true\\n    function tokensFactoryPing() external pure returns (bytes4);\\n}\\n\",\"keccak256\":\"0xcbfc948e23f6fe7b0bf32a70f4cdcd9b438c5234a0b388134f3e6caeb4da4f05\",\"license\":\"BUSL-1.1\"},\"contracts/lib/Ping.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n\\nlibrary Ping {\\n    function pong(function() external pure returns(bytes4) pingFunction) internal pure returns (bool) {\\n        return pingFunction.address != address(0) && pingFunction.selector == pingFunction();\\n    }\\n}\\n\",\"keccak256\":\"0xc99622dfb46693aeb8a332ee0e124f54e12d5ed5e6b8f70a0c0e3678df35c8b1\",\"license\":\"BUSL-1.1\"},\"contracts/lib/TokenHelper.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\n\\nlibrary TokenHelper {\\n    uint256 private constant _BYTES32_SIZE = 32;\\n\\n    error TokenIsNotAContract();\\n\\n    function assertAndGetDecimals(address _token) internal view returns (uint256) {\\n        (bool hasMetadata, bytes memory data) = _tokenMetadataCall(_token, abi.encodeCall(IERC20Metadata.decimals,()));\\n\\n        // decimals() is optional in the ERC20 standard, so if metadata is not accessible\\n        // we assume there are no decimals and use 0.\\n        if (!hasMetadata) {\\n            return 0;\\n        }\\n\\n        return abi.decode(data, (uint8));\\n    }\\n\\n    /// @dev Returns the symbol for the provided ERC20 token.\\n    /// An empty string is returned if the call to the token didn't succeed.\\n    /// @param _token address of the token to get the symbol for\\n    /// @return assetSymbol the token symbol\\n    function symbol(address _token) internal view returns (string memory assetSymbol) {\\n        (bool hasMetadata, bytes memory data) = _tokenMetadataCall(_token, abi.encodeCall(IERC20Metadata.symbol,()));\\n\\n        if (!hasMetadata || data.length == 0) {\\n            return \\\"?\\\";\\n        } else if (data.length == _BYTES32_SIZE) {\\n            return string(removeZeros(data));\\n        } else {\\n            return abi.decode(data, (string));\\n        }\\n    }\\n\\n    /// @dev Removes bytes with value equal to 0 from the provided byte array.\\n    /// @param _data byte array from which to remove zeroes\\n    /// @return result byte array with zeroes removed \\n    function removeZeros(bytes memory _data) internal pure returns (bytes memory result) {\\n        uint256 n = _data.length;\\n\\n        unchecked {\\n            for (uint256 i; i < n; i++) {\\n                if (_data[i] == 0) continue;\\n\\n                result = abi.encodePacked(result, _data[i]);\\n            }\\n        }\\n    }\\n\\n    /// @dev Performs a staticcall to the token to get its metadata (symbol, decimals, name)\\n    function _tokenMetadataCall(address _token, bytes memory _data) private view returns(bool, bytes memory) {\\n        // We need to do this before the call, otherwise the call will succeed even for EOAs\\n        if (!Address.isContract(_token)) revert TokenIsNotAContract();\\n\\n        (bool success, bytes memory result) = _token.staticcall(_data);\\n\\n        // If the call reverted we assume the token doesn't follow the metadata extension\\n        if (!success) {\\n            return (false, \\\"\\\");\\n        }\\n\\n        return (true, result);\\n    }\\n}\\n\",\"keccak256\":\"0x7e65c9647420e686cc897b3426cd94840cd42b25cc0a647e4bcdf45897fe6743\",\"license\":\"BUSL-1.1\"},\"contracts/utils/Manageable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.13;\\n\\n/// @title Manageable\\n/// @notice Implements simple manager role that can be changed by a manger or external owner role\\n/// @dev This contract is designed to work with Ownable from openzeppelin\\n/// @custom:security-contact security@silo.finance\\nabstract contract Manageable {\\n    /// @notice wallet address of manager role\\n    address private _managerRole;\\n\\n    /// @notice Emitted when manager is changed\\n    /// @param manager new manager address\\n    event ManagerChanged(address manager);\\n\\n    error ManagerIsZero();\\n    error OnlyManager();\\n    error OnlyOwnerOrManager();\\n    error ManagerDidNotChange();\\n\\n    modifier onlyManager() {\\n        if (_managerRole != msg.sender) revert OnlyManager();\\n        _;\\n    }\\n\\n    /// @param _manager new manager address\\n    constructor(address _manager) {\\n        if (_manager == address(0)) revert ManagerIsZero();\\n\\n        _managerRole = _manager;\\n    }\\n\\n    /// @notice Change manager address\\n    /// @dev Callable by manager or external owner role\\n    /// @param _manager new manager address\\n    function changeManager(address _manager) external {\\n        if (msg.sender != owner() && msg.sender != _managerRole) {\\n            revert OnlyOwnerOrManager();\\n        }\\n\\n        if (_manager == address(0)) revert ManagerIsZero();\\n        if (_manager == _managerRole) revert ManagerDidNotChange();\\n\\n        _managerRole = _manager;\\n        emit ManagerChanged(_manager);\\n    }\\n\\n    function manager() public view virtual returns (address) {\\n        return _managerRole;\\n    }\\n\\n    /// @notice Gets external owner role\\n    /// @return owner address\\n    function owner() public view virtual returns (address);\\n}\\n\",\"keccak256\":\"0x1df1f33a3158b634af38cf2a1ea838c5ab37962afba4339f0bb5e501751e0fbd\",\"license\":\"BUSL-1.1\"},\"contracts/utils/TwoStepOwnable.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.7.6 <0.9.0;\\n\\n/// @title TwoStepOwnable\\n/// @notice Contract that implements the same functionality as popular Ownable contract from openzeppelin library.\\n/// The only difference is that it adds a possibility to transfer ownership in two steps. Single step ownership\\n/// transfer is still supported.\\n/// @dev Two step ownership transfer is meant to be used by humans to avoid human error. Single step ownership\\n/// transfer is meant to be used by smart contracts to avoid over-complicated two step integration. For that reason,\\n/// both ways are supported.\\nabstract contract TwoStepOwnable {\\n    /// @dev current owner\\n    address private _owner;\\n    /// @dev candidate to an owner\\n    address private _pendingOwner;\\n\\n    /// @notice Emitted when ownership is transferred on `transferOwnership` and `acceptOwnership`\\n    /// @param newOwner new owner\\n    event OwnershipTransferred(address indexed newOwner);\\n    /// @notice Emitted when ownership transfer is proposed, aka pending owner is set\\n    /// @param newPendingOwner new proposed/pending owner\\n    event OwnershipPending(address indexed newPendingOwner);\\n\\n    /**\\n     *  error OnlyOwner();\\n     *  error OnlyPendingOwner();\\n     *  error OwnerIsZero();\\n     */\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        if (owner() != msg.sender) revert(\\\"OnlyOwner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(msg.sender);\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) revert(\\\"OwnerIsZero\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers pending ownership of the contract to a new account (`newPendingOwner`) and clears any existing\\n     * pending ownership.\\n     * Can only be called by the current owner.\\n     */\\n    function transferPendingOwnership(address newPendingOwner) public virtual onlyOwner {\\n        _setPendingOwner(newPendingOwner);\\n    }\\n\\n    /**\\n     * @dev Clears the pending ownership.\\n     * Can only be called by the current owner.\\n     */\\n    function removePendingOwnership() public virtual onlyOwner {\\n        _setPendingOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a pending owner\\n     * Can only be called by the pending owner.\\n     */\\n    function acceptOwnership() public virtual {\\n        if (msg.sender != pendingOwner()) revert(\\\"OnlyPendingOwner\\\");\\n        _setOwner(pendingOwner());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the pending owner.\\n     */\\n    function pendingOwner() public view virtual returns (address) {\\n        return _pendingOwner;\\n    }\\n\\n    /**\\n     * @dev Sets the new owner and emits the corresponding event.\\n     */\\n    function _setOwner(address newOwner) private {\\n        if (_owner == newOwner) revert(\\\"OwnerDidNotChange\\\");\\n\\n        _owner = newOwner;\\n        emit OwnershipTransferred(newOwner);\\n\\n        if (_pendingOwner != address(0)) {\\n            _setPendingOwner(address(0));\\n        }\\n    }\\n\\n    /**\\n     * @dev Sets the new pending owner and emits the corresponding event.\\n     */\\n    function _setPendingOwner(address newPendingOwner) private {\\n        if (_pendingOwner == newPendingOwner) revert(\\\"PendingOwnerDidNotChange\\\");\\n\\n        _pendingOwner = newPendingOwner;\\n        emit OwnershipPending(newPendingOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xeda289312a3dfe253df601ac8a3ddda1c95ee9f9985a80a4f91adbf3f303c1d7\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620017db380380620017db83398101604081905262000034916200046b565b33806200005457604051639c774ebf60e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556200007f3362000110565b60126200009783620001cf60201b62000b251760201c565b14620000b65760405163a14401e960e01b815260040160405180910390fd5b620000da816001600160a01b031663e99ed41d6200024660201b62000b921760201c565b620000f857604051639f45596360e01b815260040160405180910390fd5b6001600160a01b039081166080521660a05262000532565b6001546001600160a01b03808316911603620001675760405162461bcd60e51b81526020600482015260116024820152704f776e65724469644e6f744368616e676560781b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616390600090a26002546001600160a01b031615620001cc57620001cc6000620002d0565b50565b6040805160048152602481019091526020810180516001600160e01b0390811663313ce56760e01b179091526000918291829162000211918691906200037916565b915091508162000225575060009392505050565b808060200190518101906200023b9190620004a3565b60ff16949350505050565b60006001600160a01b03831615801590620002c9575082826040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200028e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002b49190620004c8565b60e083901b6001600160e01b03199081169116145b9392505050565b6002546001600160a01b038083169116036200032f5760405162461bcd60e51b815260206004820152601860248201527f50656e64696e674f776e65724469644e6f744368616e6765000000000000000060448201526064016200015e565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fd6aad444c90d39fb0eee1c6e357a7fad83d63f719ac5f880445a2beb0ff3ab5890600090a250565b6000606062000393846200044860201b62000c171760201c565b620003b1576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b031685604051620003ce9190620004f4565b600060405180830381855afa9150503d80600081146200040b576040519150601f19603f3d011682016040523d82523d6000602084013e62000410565b606091505b509150915081620004395760006040518060200160405280600081525093509350505062000441565b600193509150505b9250929050565b3b151590565b80516001600160a01b03811681146200046657600080fd5b919050565b600080604083850312156200047f57600080fd5b6200048a836200044e565b91506200049a602084016200044e565b90509250929050565b600060208284031215620004b657600080fd5b815160ff81168114620002c957600080fd5b600060208284031215620004db57600080fd5b81516001600160e01b031981168114620002c957600080fd5b6000825160005b81811015620005175760208186018101518583015201620004fb565b8181111562000527576000828501525b509190910192915050565b60805160a05161126e6200056d60003960008181610161015281816103900152818161056d01526106b3015260006102aa015261126e6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806379ba5097116100b8578063bde127181161007c578063bde12718146102a5578063c834439f146102cc578063d0659d75146102e1578063e30c3978146102e9578063eec3e6a7146102fa578063f2fde38b1461030f57600080fd5b806379ba50971461025c5780638da5cb5b1461026457806393b6809c1461026c57806397e8a2d81461027f578063a3fbbaae1461029257600080fd5b806341976e091161010a57806341976e09146101dc57806344552b5d146101ef578063481c6a75146101f757806350ebbcc1146102085780635d54e3951461022b578063715018a61461025457600080fd5b80631b01d69e14610147578063217a4b701461015c5780633278c694146101a0578063329afacd146101b357806339b216a3146101c9575b600080fd5b61015a610155366004611041565b610322565b005b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015a6101ae366004611041565b6104a0565b6101bb601281565b604051908152602001610197565b61015a6101d7366004611041565b6104db565b6101bb6101ea366004611041565b610569565b61015a61066f565b6000546001600160a01b0316610183565b61021b610216366004611041565b6106af565b6040519015158152602001610197565b610183610239366004611041565b6003602052600090815260409020546001600160a01b031681565b61015a61078c565b61015a6107c5565b61018361082c565b61015a61027a36600461105e565b610840565b61021b61028d366004611041565b610988565b61015a6102a0366004611041565b610995565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6102d4610a91565b6040516101979190611097565b6101bb610a9d565b6002546001600160a01b0316610183565b60405163eec3e6a760e01b8152602001610197565b61015a61031d366004611041565b610aa9565b3361032b61082c565b6001600160a01b03161461035a5760405162461bcd60e51b8152600401610351906110e4565b60405180910390fd5b610371816001600160a01b03166357e0c50f610b92565b61038e57604051634cd31fbb60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031663217a4b706040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190611107565b6001600160a01b03161461044157604051630c2d3f5360e11b815260040160405180910390fd5b61044c600482610c1d565b610469576040516370a96ce960e01b815260040160405180910390fd5b6040516001600160a01b038216907f4705d8451928f44517faa1bdfbbca0e2b931ae93313f022b3b989537b0daa6f590600090a250565b336104a961082c565b6001600160a01b0316146104cf5760405162461bcd60e51b8152600401610351906110e4565b6104d881610c32565b50565b336104e461082c565b6001600160a01b03161461050a5760405162461bcd60e51b8152600401610351906110e4565b610515600482610cd9565b61053257604051631605dd1760e01b815260040160405180910390fd5b6040516001600160a01b038216907fbecb08a245e5ee64b9cf97ff511fa99537ede3f8387ee3df7f951ef1dabd19bd90600090a250565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036105b35750670de0b6b3a7640000919050565b6001600160a01b03828116600090815260036020526040902054166105eb5760405163981a2a2b60e01b815260040160405180910390fd5b6001600160a01b03828116600081815260036020526040908190205490516341976e0960e01b81526004810192909252909116906341976e0990602401602060405180830381865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190611124565b92915050565b3361067861082c565b6001600160a01b03161461069e5760405162461bcd60e51b8152600401610351906110e4565b6106a86000610c32565b565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036106f257506001919050565b6001600160a01b03808316600090815260036020526040902054168061071b5750600092915050565b60405163598fd92b60e11b81526001600160a01b03848116600483015282169063b31fb25690602401602060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610785919061113d565b9392505050565b3361079561082c565b6001600160a01b0316146107bb5760405162461bcd60e51b8152600401610351906110e4565b6106a86000610cee565b6002546001600160a01b031633146108125760405162461bcd60e51b815260206004820152601060248201526f27b7363ca832b73234b733a7bbb732b960811b6044820152606401610351565b6106a86108276002546001600160a01b031690565b610cee565b60006106aa6001546001600160a01b031690565b6000546001600160a01b0316331461086b5760405163605919ad60e11b815260040160405180910390fd5b610876600482610da1565b610893576040516350c14f3960e01b815260040160405180910390fd5b60405163598fd92b60e11b81526001600160a01b03838116600483015282169063b31fb25690602401602060405180830381865afa1580156108d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fd919061113d565b61091a5760405163981a2a2b60e01b815260040160405180910390fd5b806001600160a01b0316826001600160a01b03167f26eb74ff7dd83e64daf822c2515feb1b0a46015000c9f339e23df0988237615160405160405180910390a36001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000610669600483610da1565b61099d61082c565b6001600160a01b0316336001600160a01b0316141580156109c957506000546001600160a01b03163314155b156109e75760405163b647320d60e01b815260040160405180910390fd5b6001600160a01b038116610a0e57604051639c774ebf60e01b815260040160405180910390fd5b6000546001600160a01b0390811690821603610a3d57604051632ebe652b60e21b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f198db6e425fb8aafd1823c6ca50be2d51e5764571a5ae0f0f21c6812e45def0b9060200160405180910390a150565b60606106aa6004610dc3565b60006106aa6004610dd0565b33610ab261082c565b6001600160a01b031614610ad85760405162461bcd60e51b8152600401610351906110e4565b6001600160a01b038116610b1c5760405162461bcd60e51b815260206004820152600b60248201526a4f776e657249735a65726f60a81b6044820152606401610351565b6104d881610cee565b6040805160048152602481019091526020810180516001600160e01b031663313ce56760e01b17905260009081908190610b60908590610dda565b9150915081610b73575060009392505050565b80806020019051810190610b87919061115f565b60ff16949350505050565b60006001600160a01b03831615801590610785575082826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611182565b60e083901b6001600160e01b03199081169116149392505050565b3b151590565b6000610785836001600160a01b038416610e8e565b6002546001600160a01b03808316911603610c8f5760405162461bcd60e51b815260206004820152601860248201527f50656e64696e674f776e65724469644e6f744368616e676500000000000000006044820152606401610351565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fd6aad444c90d39fb0eee1c6e357a7fad83d63f719ac5f880445a2beb0ff3ab5890600090a250565b6000610785836001600160a01b038416610edd565b6001546001600160a01b03808316911603610d3f5760405162461bcd60e51b81526020600482015260116024820152704f776e65724469644e6f744368616e676560781b6044820152606401610351565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616390600090a26002546001600160a01b0316156104d8576104d86000610c32565b6001600160a01b03811660009081526001830160205260408120541515610785565b6060600061078583610fd0565b6000610669825490565b60006060833b610dfd576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b031685604051610e1891906111ac565b600060405180830381855afa9150503d8060008114610e53576040519150601f19603f3d011682016040523d82523d6000602084013e610e58565b606091505b509150915081610e7f57600060405180602001604052806000815250935093505050610e87565b600193509150505b9250929050565b6000818152600183016020526040812054610ed557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610669565b506000610669565b60008181526001830160205260408120548015610fc6576000610f016001836111e7565b8554909150600090610f15906001906111e7565b9050818114610f7a576000866000018281548110610f3557610f3561120c565b9060005260206000200154905080876000018481548110610f5857610f5861120c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610f8b57610f8b611222565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610669565b6000915050610669565b60608160000180548060200260200160405190810160405280929190818152602001828054801561102057602002820191906000526020600020905b81548152602001906001019080831161100c575b50505050509050919050565b6001600160a01b03811681146104d857600080fd5b60006020828403121561105357600080fd5b81356107858161102c565b6000806040838503121561107157600080fd5b823561107c8161102c565b9150602083013561108c8161102c565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156110d85783516001600160a01b0316835292840192918401916001016110b3565b50909695505050505050565b60208082526009908201526827b7363ca7bbb732b960b91b604082015260600190565b60006020828403121561111957600080fd5b81516107858161102c565b60006020828403121561113657600080fd5b5051919050565b60006020828403121561114f57600080fd5b8151801515811461078557600080fd5b60006020828403121561117157600080fd5b815160ff8116811461078557600080fd5b60006020828403121561119457600080fd5b81516001600160e01b03198116811461078557600080fd5b6000825160005b818110156111cd57602081860181015185830152016111b3565b818111156111dc576000828501525b509190910192915050565b60008282101561120757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122034f0afb282988b256dcfa1a84ba5b9e2bbf1a363259d390426cd282b12cfed5164736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806379ba5097116100b8578063bde127181161007c578063bde12718146102a5578063c834439f146102cc578063d0659d75146102e1578063e30c3978146102e9578063eec3e6a7146102fa578063f2fde38b1461030f57600080fd5b806379ba50971461025c5780638da5cb5b1461026457806393b6809c1461026c57806397e8a2d81461027f578063a3fbbaae1461029257600080fd5b806341976e091161010a57806341976e09146101dc57806344552b5d146101ef578063481c6a75146101f757806350ebbcc1146102085780635d54e3951461022b578063715018a61461025457600080fd5b80631b01d69e14610147578063217a4b701461015c5780633278c694146101a0578063329afacd146101b357806339b216a3146101c9575b600080fd5b61015a610155366004611041565b610322565b005b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b61015a6101ae366004611041565b6104a0565b6101bb601281565b604051908152602001610197565b61015a6101d7366004611041565b6104db565b6101bb6101ea366004611041565b610569565b61015a61066f565b6000546001600160a01b0316610183565b61021b610216366004611041565b6106af565b6040519015158152602001610197565b610183610239366004611041565b6003602052600090815260409020546001600160a01b031681565b61015a61078c565b61015a6107c5565b61018361082c565b61015a61027a36600461105e565b610840565b61021b61028d366004611041565b610988565b61015a6102a0366004611041565b610995565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6102d4610a91565b6040516101979190611097565b6101bb610a9d565b6002546001600160a01b0316610183565b60405163eec3e6a760e01b8152602001610197565b61015a61031d366004611041565b610aa9565b3361032b61082c565b6001600160a01b03161461035a5760405162461bcd60e51b8152600401610351906110e4565b60405180910390fd5b610371816001600160a01b03166357e0c50f610b92565b61038e57604051634cd31fbb60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b031663217a4b706040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041a9190611107565b6001600160a01b03161461044157604051630c2d3f5360e11b815260040160405180910390fd5b61044c600482610c1d565b610469576040516370a96ce960e01b815260040160405180910390fd5b6040516001600160a01b038216907f4705d8451928f44517faa1bdfbbca0e2b931ae93313f022b3b989537b0daa6f590600090a250565b336104a961082c565b6001600160a01b0316146104cf5760405162461bcd60e51b8152600401610351906110e4565b6104d881610c32565b50565b336104e461082c565b6001600160a01b03161461050a5760405162461bcd60e51b8152600401610351906110e4565b610515600482610cd9565b61053257604051631605dd1760e01b815260040160405180910390fd5b6040516001600160a01b038216907fbecb08a245e5ee64b9cf97ff511fa99537ede3f8387ee3df7f951ef1dabd19bd90600090a250565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036105b35750670de0b6b3a7640000919050565b6001600160a01b03828116600090815260036020526040902054166105eb5760405163981a2a2b60e01b815260040160405180910390fd5b6001600160a01b03828116600081815260036020526040908190205490516341976e0960e01b81526004810192909252909116906341976e0990602401602060405180830381865afa158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190611124565b92915050565b3361067861082c565b6001600160a01b03161461069e5760405162461bcd60e51b8152600401610351906110e4565b6106a86000610c32565b565b905090565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316036106f257506001919050565b6001600160a01b03808316600090815260036020526040902054168061071b5750600092915050565b60405163598fd92b60e11b81526001600160a01b03848116600483015282169063b31fb25690602401602060405180830381865afa158015610761573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610785919061113d565b9392505050565b3361079561082c565b6001600160a01b0316146107bb5760405162461bcd60e51b8152600401610351906110e4565b6106a86000610cee565b6002546001600160a01b031633146108125760405162461bcd60e51b815260206004820152601060248201526f27b7363ca832b73234b733a7bbb732b960811b6044820152606401610351565b6106a86108276002546001600160a01b031690565b610cee565b60006106aa6001546001600160a01b031690565b6000546001600160a01b0316331461086b5760405163605919ad60e11b815260040160405180910390fd5b610876600482610da1565b610893576040516350c14f3960e01b815260040160405180910390fd5b60405163598fd92b60e11b81526001600160a01b03838116600483015282169063b31fb25690602401602060405180830381865afa1580156108d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fd919061113d565b61091a5760405163981a2a2b60e01b815260040160405180910390fd5b806001600160a01b0316826001600160a01b03167f26eb74ff7dd83e64daf822c2515feb1b0a46015000c9f339e23df0988237615160405160405180910390a36001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000610669600483610da1565b61099d61082c565b6001600160a01b0316336001600160a01b0316141580156109c957506000546001600160a01b03163314155b156109e75760405163b647320d60e01b815260040160405180910390fd5b6001600160a01b038116610a0e57604051639c774ebf60e01b815260040160405180910390fd5b6000546001600160a01b0390811690821603610a3d57604051632ebe652b60e21b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f198db6e425fb8aafd1823c6ca50be2d51e5764571a5ae0f0f21c6812e45def0b9060200160405180910390a150565b60606106aa6004610dc3565b60006106aa6004610dd0565b33610ab261082c565b6001600160a01b031614610ad85760405162461bcd60e51b8152600401610351906110e4565b6001600160a01b038116610b1c5760405162461bcd60e51b815260206004820152600b60248201526a4f776e657249735a65726f60a81b6044820152606401610351565b6104d881610cee565b6040805160048152602481019091526020810180516001600160e01b031663313ce56760e01b17905260009081908190610b60908590610dda565b9150915081610b73575060009392505050565b80806020019051810190610b87919061115f565b60ff16949350505050565b60006001600160a01b03831615801590610785575082826040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfc9190611182565b60e083901b6001600160e01b03199081169116149392505050565b3b151590565b6000610785836001600160a01b038416610e8e565b6002546001600160a01b03808316911603610c8f5760405162461bcd60e51b815260206004820152601860248201527f50656e64696e674f776e65724469644e6f744368616e676500000000000000006044820152606401610351565b600280546001600160a01b0319166001600160a01b0383169081179091556040517fd6aad444c90d39fb0eee1c6e357a7fad83d63f719ac5f880445a2beb0ff3ab5890600090a250565b6000610785836001600160a01b038416610edd565b6001546001600160a01b03808316911603610d3f5760405162461bcd60e51b81526020600482015260116024820152704f776e65724469644e6f744368616e676560781b6044820152606401610351565b600180546001600160a01b0319166001600160a01b0383169081179091556040517f04dba622d284ed0014ee4b9a6a68386be1a4c08a4913ae272de89199cc68616390600090a26002546001600160a01b0316156104d8576104d86000610c32565b6001600160a01b03811660009081526001830160205260408120541515610785565b6060600061078583610fd0565b6000610669825490565b60006060833b610dfd576040516373d39f9d60e01b815260040160405180910390fd5b600080856001600160a01b031685604051610e1891906111ac565b600060405180830381855afa9150503d8060008114610e53576040519150601f19603f3d011682016040523d82523d6000602084013e610e58565b606091505b509150915081610e7f57600060405180602001604052806000815250935093505050610e87565b600193509150505b9250929050565b6000818152600183016020526040812054610ed557508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610669565b506000610669565b60008181526001830160205260408120548015610fc6576000610f016001836111e7565b8554909150600090610f15906001906111e7565b9050818114610f7a576000866000018281548110610f3557610f3561120c565b9060005260206000200154905080876000018481548110610f5857610f5861120c565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610f8b57610f8b611222565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610669565b6000915050610669565b60608160000180548060200260200160405190810160405280929190818152602001828054801561102057602002820191906000526020600020905b81548152602001906001019080831161100c575b50505050509050919050565b6001600160a01b03811681146104d857600080fd5b60006020828403121561105357600080fd5b81356107858161102c565b6000806040838503121561107157600080fd5b823561107c8161102c565b9150602083013561108c8161102c565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156110d85783516001600160a01b0316835292840192918401916001016110b3565b50909695505050505050565b60208082526009908201526827b7363ca7bbb732b960b91b604082015260600190565b60006020828403121561111957600080fd5b81516107858161102c565b60006020828403121561113657600080fd5b5051919050565b60006020828403121561114f57600080fd5b8151801515811461078557600080fd5b60006020828403121561117157600080fd5b815160ff8116811461078557600080fd5b60006020828403121561119457600080fd5b81516001600160e01b03198116811461078557600080fd5b6000825160005b818110156111cd57602081860181015185830152016111b3565b818111156111dc576000828501525b509190910192915050565b60008282101561120757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea264697066735822122034f0afb282988b256dcfa1a84ba5b9e2bbf1a363259d390426cd282b12cfed5164736f6c634300080d0033",
  "devdoc": {
    "custom:security-contact": "security@silo.finance",
    "kind": "dev",
    "methods": {
      "acceptOwnership()": {
        "details": "Transfers ownership of the contract to a pending owner Can only be called by the pending owner."
      },
      "addPriceProvider(address)": {
        "params": {
          "_priceProvider": "address of price provider"
        }
      },
      "changeManager(address)": {
        "details": "Callable by manager or external owner role",
        "params": {
          "_manager": "new manager address"
        }
      },
      "constructor": {
        "params": {
          "_quoteToken": "address of quote token",
          "_siloRepository": "address of SiloRepository"
        }
      },
      "getPrice(address)": {
        "params": {
          "_asset": "address of an asset for which to read price"
        },
        "returns": {
          "_0": "TWAP price of a token with 18 decimals"
        }
      },
      "isPriceProvider(address)": {
        "params": {
          "_provider": "address of price provider to be removed"
        },
        "returns": {
          "_0": "true if address is a registered price provider, otherwise false"
        }
      },
      "manager()": {
        "returns": {
          "_0": "manager role address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pendingOwner()": {
        "details": "Returns the address of the pending owner."
      },
      "priceProvidersRepositoryPing()": {
        "returns": {
          "_0": "returns always TRUE"
        }
      },
      "providerList()": {
        "returns": {
          "_0": "array of price providers"
        }
      },
      "providersCount()": {
        "returns": {
          "_0": "number of price providers registered"
        }
      },
      "providersReadyForAsset(address)": {
        "params": {
          "_asset": "asset address to check"
        },
        "returns": {
          "_0": "returns TRUE if price feed is ready, otherwise false"
        }
      },
      "removePendingOwnership()": {
        "details": "Clears the pending ownership. Can only be called by the current owner."
      },
      "removePriceProvider(address)": {
        "params": {
          "_priceProvider": "address of price provider to be removed"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setPriceProviderForAsset(address,address)": {
        "details": "Request for asset price is forwarded to the price provider assigned to that asset",
        "params": {
          "_asset": "address of an asset for which price provider will be used",
          "_priceProvider": "address of price provider"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transferPendingOwnership(address)": {
        "details": "Transfers pending ownership of the contract to a new account (`newPendingOwner`) and clears any existing pending ownership. Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "QUOTE_TOKEN_DECIMALS": {
        "details": "we require quote token to have 18 decimals"
      },
      "_ONE": {
        "details": "Constant used for prices' decimal points, 1e18 is treated as 1"
      },
      "priceProviders": {
        "details": "Each asset must have a price provider contract assigned, otherwise it's not supported"
      }
    },
    "title": "PriceProvidersRepository",
    "version": 1
  },
  "userdoc": {
    "events": {
      "ManagerChanged(address)": {
        "notice": "Emitted when manager is changed"
      },
      "NewPriceProvider(address)": {
        "notice": "Emitted when price provider is added"
      },
      "OwnershipPending(address)": {
        "notice": "Emitted when ownership transfer is proposed, aka pending owner is set"
      },
      "OwnershipTransferred(address)": {
        "notice": "Emitted when ownership is transferred on `transferOwnership` and `acceptOwnership`"
      },
      "PriceProviderForAsset(address,address)": {
        "notice": "Emitted when asset is assigned to price provider"
      },
      "PriceProviderRemoved(address)": {
        "notice": "Emitted when price provider is removed"
      }
    },
    "kind": "user",
    "methods": {
      "addPriceProvider(address)": {
        "notice": "Register new price provider"
      },
      "changeManager(address)": {
        "notice": "Change manager address"
      },
      "getPrice(address)": {
        "notice": "Returns \"Time-Weighted Average Price\" for an asset"
      },
      "isPriceProvider(address)": {
        "notice": "Returns true if address is a registered price provider"
      },
      "manager()": {
        "notice": "Gets manager role address"
      },
      "priceProviders(address)": {
        "notice": "Maps asset address to its price provider"
      },
      "priceProvidersRepositoryPing()": {
        "notice": "Sanity check function"
      },
      "providerList()": {
        "notice": "Gets an array of price providers"
      },
      "providersCount()": {
        "notice": "Gets number of price providers registered"
      },
      "providersReadyForAsset(address)": {
        "notice": "Checks if providers are available for an asset"
      },
      "quoteToken()": {
        "notice": "Token in which prices are quoted. It's most likely WETH, however it could vary from deployment to deployment. For example 1 SILO costs X amount of quoteToken."
      },
      "removePriceProvider(address)": {
        "notice": "Unregister price provider"
      },
      "setPriceProviderForAsset(address,address)": {
        "notice": "Sets price provider for asset"
      },
      "siloRepository()": {
        "notice": "SiloRepository contract address"
      }
    },
    "notice": "A repository of price providers. It manages price providers as well as maps assets to their price provider. It acts as a entry point for Silo for token prices.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 24397,
        "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
        "label": "_managerRole",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 25145,
        "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
        "label": "_owner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 25148,
        "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
        "label": "_pendingOwner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 11991,
        "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
        "label": "priceProviders",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_contract(IPriceProvider)17747)"
      },
      {
        "astId": 11995,
        "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
        "label": "_allProviders",
        "offset": 0,
        "slot": "4",
        "type": "t_struct(AddressSet)7290_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IPriceProvider)17747": {
        "encoding": "inplace",
        "label": "contract IPriceProvider",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(IPriceProvider)17747)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract IPriceProvider)",
        "numberOfBytes": "32",
        "value": "t_contract(IPriceProvider)17747"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)7290_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "members": [
          {
            "astId": 7289,
            "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)6989_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(Set)6989_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "members": [
          {
            "astId": 6984,
            "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 6988,
            "contract": "contracts/PriceProvidersRepository.sol:PriceProvidersRepository",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}